Tutorial Supabase + React: https://youtu.be/-5UJjJZzznw

Tech stack:
! - Netlify hosting 
! - Supabase 
! - React PWA 
! - mui material ui 
! - react router dom v6 
! - dontenv - 
! - icon library (react bootstrap icons)


! --------------------------------//phase 0//--------------------------------
! PREPARATION
! - setup supabase database
! - create tables, add some dummy data
! - create project, git, github repo, install dependencies, set up envoirnment

--------------------------------//phase 1//--------------------------------
FIRST WORKING PROTOTYPE. BASIC FUNCTIONALITY

!- create login with magic link auth supabase --- switched to email + password
!- create login with email + password
!- create forgot password 
!- implement react router dom 
!- do not make source maps on build to hide source
!- create frontend components with dummy data
!- link frontend components with supabase (allow user to see items created with auth.user_id)

!- CRUD operations on patients, issues, symptoms, interventions
!- start app mobile first, but MUST be good for desktop!

!- add organization field to alltables 
!- for now alow crud for user_id = auth.user_id, 
!- later implement how data that have .organization_id = auth.users.metadadta.organization_id

!- validating forms - required fields, add dropdowns for therpaists, body parts, duration, intensity

--------------------------------//phase 2//--------------------------------
ADD FEATURES
! add appointments calendar 
! fix search patients (get all patients on load, filter on search (like(%X%)))
! make all tables max height and scrollable
! make desktop layout (patient - if show info: paralel info and issues, appointments(make it?) table)

! implement confirmation dialogues on delete functions ("are you sure you want to delete X?)
! implement loading component/icon on async actions
! create appointments list (table of appointments) paralel with calendar, maybe 2 tabs, data is handeled in parent component, calendar and list gets just props? -- Agenta is alredy on calendar - enough?

- take photos, add pictures to issues(storage)
- add, record voice memos to issues(storage)?

! body map(map body parts rows to picture areas) - for now only on issueView
    - color body parts to symptom intensity
    - color body parts to how fresh the issue is


--------------------------------//phase 3//--------------------------------
MAKE THINGS PRODUCTION READY, SECURITY
- create develop branch for developing and main for production
! what can users do(crud) row level security
- create new user, create trigger to add entry to users table // now usig auth.users table with user.metadata
- change hardcoded reset password link with .env variable
db RLS:
- add custom permission levels to users(admin, not admin)?


- versioning, major_v(breaking db changes), minor_v(new features)
- error loging to db
- user settings(what settings do we need) - table query on app load...in app set db values onchange


--------------------------------//BACKLOG//--------------------------------




--------------------------------//OTHER//--------------------------------

Db pass: ".[geslo]"
